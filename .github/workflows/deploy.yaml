name: Deploy Django App to AWS (Dev)

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - 'RepoA/**'
      - 'RepoB/**'

  workflow_dispatch:

env:
  ENVIRONMENT: dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Export database credentials
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV

      - name: Build Repo A
        run: |
          cd RepoA
          python setup.py sdist
          ls ./dist  # Debug to ensure the dist package is created
          cd ../

      - name: Deploy to EC2
        run: |
          # Copy the RepoA dist package to the server
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./RepoA/dist/*.tar.gz ubuntu@${{ secrets.AWS_EC2_IP }}:/home/ubuntu/RepoA/dist/

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
            set -e
            
            # Navigate to MainRepo
            cd /home/ubuntu/MainRepo
            
            # Pull latest changes
            git reset --hard
            git pull origin main
            
            # Activate virtual environment
            source venv/bin/activate

            # Install RepoA package
            cd /home/ubuntu/RepoA/dist
            pip install ./*.tar.gz

            # Install other dependencies
            cd /home/ubuntu/MainRepo
            pip install -r requirements.txt

            # Apply migrations
            python manage.py migrate

            # Restart services
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF
